-- viterbi_decoder.vhd

-- Generated using ACDS version 20.1 720

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity viterbi_decoder is
	port (
		clk            : in  std_logic                     := '0';             -- clk.clk
		sink_val       : in  std_logic                     := '0';             --  in.valid
		sink_rdy       : out std_logic;                                        --    .ready
		eras_sym       : in  std_logic_vector(1 downto 0)  := (others => '0'); --    .eras_sym
		rr             : in  std_logic_vector(15 downto 0) := (others => '0'); --    .rr
		source_val     : out std_logic;                                        -- out.valid
		source_rdy     : in  std_logic                     := '0';             --    .ready
		normalizations : out std_logic_vector(7 downto 0);                     --    .normalizations
		decbit         : out std_logic;                                        --    .decbit
		reset          : in  std_logic                     := '0'              -- rst.reset
	);
end entity viterbi_decoder;

architecture rtl of viterbi_decoder is
	component viterbi_decoder_viterbi_ii_0 is
		generic (
			viterbi_type          : string  := "Parallel";
			parallel_optimization : string  := "None";
			n                     : string  := "4";
			ncodes                : integer := 1;
			L                     : string  := "3";
			dec_mode              : string  := "V";
			ga                    : string  := "7";
			gb                    : string  := "6";
			gc                    : string  := "5";
			gd                    : string  := "4";
			ge                    : string  := "0";
			gf                    : string  := "0";
			gg                    : string  := "0";
			acs_units             : integer := 1;
			v                     : integer := 21;
			softbits              : integer := 3;
			rr_size               : integer := 1;
			n_max                 : integer := 1;
			log2_n_max            : integer := 1;
			bmgwide               : integer := 1;
			numerr_size           : integer := 1;
			constraint_length_m_1 : integer := 1;
			vlog_wide             : integer := 1;
			sel_code_size         : integer := 1;
			ber                   : string  := "used";
			node_sync             : string  := "used";
			best_state_finder     : string  := "used";
			use_altera_syncram    : integer := 0
		);
		port (
			clk             : in  std_logic                     := 'X';             -- clk
			reset           : in  std_logic                     := 'X';             -- reset
			sink_val        : in  std_logic                     := 'X';             -- valid
			sink_rdy        : out std_logic;                                        -- ready
			eras_sym        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- eras_sym
			rr              : in  std_logic_vector(15 downto 0) := (others => 'X'); -- rr
			source_val      : out std_logic;                                        -- valid
			source_rdy      : in  std_logic                     := 'X';             -- ready
			normalizations  : out std_logic_vector(7 downto 0);                     -- normalizations
			decbit          : out std_logic;                                        -- decbit
			sink_sop        : in  std_logic                     := 'X';             -- startofpacket
			sink_eop        : in  std_logic                     := 'X';             -- endofpacket
			ber_clear       : in  std_logic                     := 'X';             -- export
			tb_type         : in  std_logic                     := 'X';             -- data
			bm_init_state   : in  std_logic_vector(5 downto 0)  := (others => 'X'); -- data
			bm_init_value   : in  std_logic_vector(12 downto 0) := (others => 'X'); -- data
			source_sop      : out std_logic;                                        -- startofpacket
			source_eop      : out std_logic;                                        -- endofpacket
			numerr          : out std_logic_vector(7 downto 0);                     -- data
			state_node_sync : in  std_logic                     := 'X';             -- export
			sel_code        : in  std_logic                     := 'X';             -- export
			tb_length       : in  std_logic_vector(5 downto 0)  := (others => 'X'); -- export
			tr_init_state   : in  std_logic_vector(5 downto 0)  := (others => 'X'); -- export
			bestadd         : out std_logic_vector(5 downto 0);                     -- export
			bestmet         : out std_logic_vector(12 downto 0)                     -- export
		);
	end component viterbi_decoder_viterbi_ii_0;

begin

	viterbi_ii_0 : component viterbi_decoder_viterbi_ii_0
		generic map (
			viterbi_type          => "Parallel",
			parallel_optimization => "Continuous",
			n                     => "2",
			ncodes                => 1,
			L                     => "7",
			dec_mode              => "V",
			ga                    => "91",
			gb                    => "121",
			gc                    => "0",
			gd                    => "0",
			ge                    => "0",
			gf                    => "0",
			gg                    => "0",
			acs_units             => 1,
			v                     => 42,
			softbits              => 8,
			rr_size               => 16,
			n_max                 => 2,
			log2_n_max            => 1,
			bmgwide               => 13,
			numerr_size           => 8,
			constraint_length_m_1 => 6,
			vlog_wide             => 6,
			sel_code_size         => 1,
			ber                   => "unused",
			node_sync             => "unused",
			best_state_finder     => "unused",
			use_altera_syncram    => 0
		)
		port map (
			clk             => clk,             -- clk.clk
			reset           => reset,           -- rst.reset
			sink_val        => sink_val,        --  in.valid
			sink_rdy        => sink_rdy,        --    .ready
			eras_sym        => eras_sym,        --    .eras_sym
			rr              => rr,              --    .rr
			source_val      => source_val,      -- out.valid
			source_rdy      => source_rdy,      --    .ready
			normalizations  => normalizations,  --    .normalizations
			decbit          => decbit,          --    .decbit
			sink_sop        => '0',             -- (terminated)
			sink_eop        => '0',             -- (terminated)
			ber_clear       => '0',             -- (terminated)
			tb_type         => '0',             -- (terminated)
			bm_init_state   => "000000",        -- (terminated)
			bm_init_value   => "0000000000000", -- (terminated)
			source_sop      => open,            -- (terminated)
			source_eop      => open,            -- (terminated)
			numerr          => open,            -- (terminated)
			state_node_sync => '0',             -- (terminated)
			sel_code        => '0',             -- (terminated)
			tb_length       => "000000",        -- (terminated)
			tr_init_state   => "000000",        -- (terminated)
			bestadd         => open,            -- (terminated)
			bestmet         => open             -- (terminated)
		);

end architecture rtl; -- of viterbi_decoder
